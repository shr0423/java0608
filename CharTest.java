/*자바의 문자자료형인 char에 대해 알아보자*/
class CharTest{
	//main메서드는 java.exe가 호출될때 찾아나서는
	//실행부메서드이다.
	public static void main(String[] args){
		//int x=3;
		//char c='A';
		//System.out.println(c);

		int k=7;
		byte b=5;
		//k=b;
		
		//손실을 감당하고서라도 자료형의 변환을 강제하는 현상을
		//가리켜 강제형변환이라 한다
		//특히 큰 자료형에서 작은 자료형으로의 형변환의 경우
		//개발자는  작은 자료형으로의 형변환을 명시하는 cast연산자를
		//적용해야한다.(강제형변환 cast연산자)
		//b=(byte)k;
			short s=17;
			byte m=6;
			
			//아래의 코드의 경우, 모든 연산자 뿐만아니라
			//=연산자도 피연산자의 자료형이 동일할때만 동작될수있따.
			//따라서 아래의 연산에서 둘중 하나를 형변환하여 
			//연산을 수행할수밖에 없는데 이때 기준은 데이터의
			//손실이 발생하지 않아야 하므로 작은 자료형을 
			//큰 자료형에 맞추어 자동형변환이 발생한다. 이러한 현상을
			//자동형변환이라하며 자동형변한은 손실이발생하지 않기
			//때문에 개발자가 casting처리할 필요도 없으며,
			//언어차원에서 자동으로 처리된다.

		//	s=m;

		//boolean y=true; //1,0
		//int z=5;

		//z=y;
		//long p=76;
		//short u=34;
		//p=u;
		//결론 자바의 3가지 자료형 중에서 숫자형끼리는
		//사실 용량만 다를뿐 같은 자료형이다
		
		//결론:java언어뿐만 아니라 사실상 모든 프로그래밍 언어에서
		//문자란 존재하지 않는다.결국 모두 숫자였다..
		//주의:char형이 비록 숫자형이긴해도 주 사용목적은
		//아스키,유니코드와 같은문자체계의 음수아닌 숫자만을
		//담기위한 목적의 자료형이므로 char형으로 수치연산에
		//사용하지는 말자
		char r='V';
		char n=97;
	}
}